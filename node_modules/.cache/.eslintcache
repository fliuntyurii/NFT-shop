[{"/home/yuriifliunt/Загальне/projects/NFT-shop/src/index.js":"1","/home/yuriifliunt/Загальне/projects/NFT-shop/src/App.js":"2","/home/yuriifliunt/Загальне/projects/NFT-shop/src/redux/store.jsx":"3","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Header/Header.jsx":"4","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Homepage/HomepageContainer.jsx":"5","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx":"6","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductList.jsx":"7","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Homepage/Homepage.jsx":"8","/home/yuriifliunt/Загальне/projects/NFT-shop/src/redux/productPageReducer.tsx":"9","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Preloader/Preloader.jsx":"10","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Contacts/Contacts.jsx":"11","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx":"12","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPage.jsx":"13"},{"size":346,"mtime":1645129279380,"results":"14","hashOfConfig":"15"},{"size":617,"mtime":1645288118963,"results":"16","hashOfConfig":"15"},{"size":342,"mtime":1645781785896,"results":"17","hashOfConfig":"15"},{"size":418,"mtime":1645461146684,"results":"18","hashOfConfig":"15"},{"size":618,"mtime":1644966481762,"results":"19","hashOfConfig":"15"},{"size":2944,"mtime":1645781919454,"results":"20","hashOfConfig":"15"},{"size":1561,"mtime":1645516595799,"results":"21","hashOfConfig":"15"},{"size":1500,"mtime":1645129276343,"results":"22","hashOfConfig":"15"},{"size":1498,"mtime":1645781822497,"results":"23","hashOfConfig":"15"},{"size":335,"mtime":1645782251117,"results":"24","hashOfConfig":"15"},{"size":424,"mtime":1645268721169,"results":"25","hashOfConfig":"15"},{"size":1757,"mtime":1645456626667,"results":"26","hashOfConfig":"15"},{"size":2140,"mtime":1645782088235,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"egqln5",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"/home/yuriifliunt/Загальне/projects/NFT-shop/src/index.js",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/App.js",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/redux/store.jsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Header/Header.jsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Homepage/HomepageContainer.jsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx",["72"],[],"import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { useRef, useEffect } from \"react\";\n\nconst ProductListContainer = (props) => {\n    const myRef = useRef();\n\n    useEffect(() => {\n        props.setNftDataThunk();\n    }, [props.nft.length])\n\n    const openModalWindow = (ev) => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n        const getId = ev.target;\n        return finalId = getId.getAttribute('id');\n    }\n\n    const insertAfter = (elem, refElem) => {\n        return myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    const sortToLow = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    const sortToHigh = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    } \n\n    const sortByName = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (myRef.current.children[i].getAttribute('data-name') > myRef.current.children[n].getAttribute('data-name')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n    return (\n        <ProductList sortByName={sortByName} \n            sortToLow={sortToLow} \n            sortToHigh={sortToHigh} myRef={myRef} \n            nft={props.nft} \n            isFetching={props.isFetching}\n            openModalWindow={openModalWindow}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n        isFetching: state.productPage.isFetching,\n        isModalWindow: state.productPage.isModalWindow\n    }\n}\n\nexport let finalId;\n\nexport default connect(mapStateToProps, { setNftDataThunk, toggleModalWindow })(ProductListContainer);","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductList.jsx",["73","74","75"],[],"import React from \"react\";\nimport Preloader from \"../Preloader/Preloader\";\nimport style from \"./ProductList.module.css\"\n\nconst ProductList = (props) => { \n    return (\n        <div className={style.block}>\n            <a name='products'></a>            \n            <div className={style.nav}>   \n                <h2>Products</h2>\n                <div>\n                    <div>Sort by: \n                        <button onClick={props.sortToLow}>Low $</button> | \n                        <button onClick={props.sortToHigh}>High $</button> | \n                        <button onClick={props.sortByName}>Name</button>\n                    </div>\n                </div>\n            </div>\n            <Preloader isFetching={props.isFetching} />\n            <div className={style.nftPage} ref={props.myRef}>                \n                {\n                    props.nft.map(nft => \n                    <div key={nft.name} data-name={nft.name} data-price={nft.price} className={style.nftBlock}>\n                        <img src={nft.imageUrl} className={style.nftImage} />\n                        <h3>{nft.name}</h3>\n                        <p>Amount: {nft.amount}</p>\n                        <p>Price: {nft.price}$</p>\n                        <div className={style.button}>\n                            <button id={nft.id} onClick={props.openModalWindow}>Info</button>\n                            <button>Buy</button>\n                        </div>\n                    </div> )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProductList;","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Homepage/Homepage.jsx",["76","77"],[],"import style from \"./Homepage.module.css\";\n\nconst Homepage = (props) => {\n    const discountImg = 'https://previews.123rf.com/images/valentint/valentint1505/valentint150502811/39925513-icono-de-10-por-ciento-de-descuento-bot%C3%B3n-azul-de-internet-sobre-fondo-blanco-.jpg'\n    const nftImg = 'https://root-nation.com/wp-content/uploads/2021/09/NFT-1.jpg'\n    return (\n        <div className={style.homepage}>\n            <a name='home'></a>\n            <div className={style.button}>\n                <i onClick={props.toggleChange} className={style.left}></i>\n            </div>\n            {\n                props.toggle ? \n                    <div className={style.banner}>\n                        <p>Welcome to my NFT collection</p>\n                        <span>You can get it for the best price</span>\n                        <img className={style.nftImage} src={nftImg} alt=\"\" />\n                        <button >Buy now</button>\n                    </div> \n                :\n                    <div className={style.banner}>\n                        <p>Discount every friday</p>\n                        <span>from 5:00 PM to 6:00 PM</span>\n                        <img src={discountImg} alt=\"\" />\n                        <button href=\"#products\">Buy now</button> \n                    </div>\n            }\n            <div className={style.button}>\n                <i onClick={props.toggleChange} className={style.right}></i>\n            </div>\n        </div>\n    )\n}\n\nexport default Homepage;","/home/yuriifliunt/Загальне/projects/NFT-shop/src/redux/productPageReducer.tsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Preloader/Preloader.jsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/Contacts/Contacts.jsx",["78","79"],[],"import style from './Contacts.module.css'\n\nconst Contacts = (props) => {\n    return (\n        <div className={style.block}>\n            <a name='contacts'></a>\n            <div className={style.contact}>\n                <h3>Contacts</h3>\n                <p>Ukraine, Lviv</p>\n                <p>GitHub: <a href=\"https://github.com/fliuntyurii\">click</a></p>\n            </div>\n        </div>\n    )\n}\n\nexport default Contacts;","/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx",[],[],"/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPage.jsx",["80"],[],"import { finalId } from '../ProductList/ProductListContainer'\nimport style from './ProductPage.module.css'\n\nconst ProductPage = (props) => {\n    console.log(props.nft[1].size.width)\n    const index = props.nft.findIndex(el => el.id == finalId)\n    return (\n        <div className={style.productPage}>\n            <div className={style.productBlock}>\n                <div className={style.header}>\n                    <p>Card #{props.nft[index].id}</p>\n                    <button onClick={props.closeModalWindow} className={style.close}></button>\n                </div>\n                <div className={style.body}>\n                    <p><span>NFT:</span> {props.nft[index].name}</p>\n                    <img src={props.nft[index].imageUrl} alt=\"\" />\n                    <p><span>Amount:</span> {props.nft[index].amount}<span className={style.pcs}> pcs</span></p>\n                    <p><span>Price:</span> {props.nft[index].price}$</p>\n                    <div>\n                    <span>Size:</span>\n                        <p><span>Width:</span> {props.nft[index].size.width}mm</p>\n                        <p><span>Height:</span> {props.nft[index].size.height}mm</p>\n                    </div>\n                    <div className={style.commentBlock}>\n                    </div>\n                </div>\n                <div className={style.footer}>\n                    <div>\n                        <input type=\"text\" placeholder='comment' />\n                        <button className={style.delete}>Submit</button>\n                    </div>\n                    <button onClick={props.confirmWindow} className={style.delete}>Delete</button>\n                </div>\n                {\n                    props.confirmDelete && \n                    <div className={style.confirmedMenu}>\n                        <div>\n                            <button id={finalId} onClick={props.deleteNft}>Confirm</button>\n                            <button onClick={props.closeModalWindow}>Cancel</button>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProductPage;",{"ruleId":"81","severity":1,"message":"82","line":11,"column":8,"nodeType":"83","endLine":11,"endColumn":26,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":13,"nodeType":"87","endLine":8,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":8,"column":13,"nodeType":"87","endLine":8,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":24,"column":25,"nodeType":"87","endLine":24,"endColumn":78},{"ruleId":"85","severity":1,"message":"86","line":8,"column":13,"nodeType":"87","endLine":8,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":8,"column":13,"nodeType":"87","endLine":8,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":6,"column":13,"nodeType":"87","endLine":6,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":6,"column":13,"nodeType":"87","endLine":6,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":6,"column":51,"nodeType":"94","messageId":"95","endLine":6,"endColumn":53},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["96"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"97","fix":"98"},"Update the dependencies array to be: [props, props.nft.length]",{"range":"99","text":"100"},[353,371],"[props, props.nft.length]"]