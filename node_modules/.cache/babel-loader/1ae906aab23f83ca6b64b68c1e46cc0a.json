{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductPage from \"./ProductPage\";\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPageContainer = props => {\n  _s();\n\n  const [confirmDelete, setconfirmDelete] = useState(false);\n\n  const closeModalWindow = () => {\n    props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n  };\n\n  const deleteNft = ev => {\n    const id = +ev.target.getAttribute('id');\n    console.log(id);\n    let promiseOne = fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, {\n      method: 'DELETE'\n    }).then(res => res.json()).then(data => data);\n    let promiseTwo = fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/', {\n      method: 'GET'\n    }).then;\n    props.toggleModalWindow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isModalWindow ? /*#__PURE__*/_jsxDEV(ProductPage, {\n      deleteNft: deleteNft,\n      nft: props.nft,\n      closeModalWindow: closeModalWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductPageContainer, \"djuIepKxJSHP0inuX2pJVMlGuhg=\");\n\n_c = ProductPageContainer;\n\nconst mapStateToProps = state => {\n  return {\n    isModalWindow: state.productPage.isModalWindow,\n    nft: state.productPage.nft\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleModalWindow\n})(ProductPageContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPageContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx"],"names":["ProductPage","connect","useState","toggleModalWindow","ProductPageContainer","props","confirmDelete","setconfirmDelete","closeModalWindow","isModalWindow","deleteNft","ev","id","target","getAttribute","console","log","promiseOne","fetch","method","then","res","json","data","promiseTwo","nft","mapStateToProps","state","productPage"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMM,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACF,iBAAN,CAAwB,KAAxB,CAAtB,GAAuDE,KAAK,CAACF,iBAAN,CAAwB,IAAxB,CAAvD;AACH,GAFD;;AAIA,QAAMO,SAAS,GAAIC,EAAD,IAAQ;AACtB,UAAMC,EAAE,GAAG,CAACD,EAAE,CAACE,MAAH,CAAUC,YAAV,CAAuB,IAAvB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,QAAIK,UAAU,GAAGC,KAAK,CAAC,uEAAuEN,EAAxE,EAA4E;AAC9FO,MAAAA,MAAM,EAAE;AADsF,KAA5E,CAAL,CAGZC,IAHY,CAGPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHA,EAIZF,IAJY,CAIPG,IAAI,IAAIA,IAJD,CAAjB;AAKA,QAAIC,UAAU,GAAGN,KAAK,CAAC,oEAAD,EAAuE;AACzFC,MAAAA,MAAM,EAAE;AADiF,KAAvE,CAAL,CAGZC,IAHL;AAIAf,IAAAA,KAAK,CAACF,iBAAN,CAAwB,KAAxB;AAEH,GAdD;;AAgBA,sBACI;AAAA,cACKE,KAAK,CAACI,aAAN,gBACG,QAAC,WAAD;AACI,MAAA,SAAS,EAAEC,SADf;AAEI,MAAA,GAAG,EAAEL,KAAK,CAACoB,GAFf;AAGI,MAAA,gBAAgB,EAAEjB;AAHtB;AAAA;AAAA;AAAA;AAAA,YADH,GAMD;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnCD;;GAAMJ,oB;;KAAAA,oB;;AAqCN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,aAAa,EAAEkB,KAAK,CAACC,WAAN,CAAkBnB,aAD9B;AAEHgB,IAAAA,GAAG,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAexB,OAAO,CAACyB,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,oBAAhD,CAAf","sourcesContent":["import ProductPage from \"./ProductPage\"\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\n\nconst ProductPageContainer = (props) => {\n\n    const [confirmDelete, setconfirmDelete] = useState(false);\n\n    const closeModalWindow = () => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n    }\n    \n    const deleteNft = (ev) => {\n        const id = +ev.target.getAttribute('id');\n        console.log(id)\n        let promiseOne = fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, { \n            method: 'DELETE'\n        })\n            .then(res => res.json())\n            .then(data => data);\n        let promiseTwo = fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/', { \n            method: 'GET'\n        })\n            .then\n        props.toggleModalWindow(false);\n        \n    }\n    \n    return (\n        <div>\n            {props.isModalWindow ? \n                <ProductPage \n                    deleteNft={deleteNft}\n                    nft={props.nft} \n                    closeModalWindow={closeModalWindow} \n                /> : \n            null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isModalWindow: state.productPage.isModalWindow,\n        nft: state.productPage.nft\n    }\n}\n\nexport default connect(mapStateToProps, { toggleModalWindow })(ProductPageContainer);"]},"metadata":{},"sourceType":"module"}