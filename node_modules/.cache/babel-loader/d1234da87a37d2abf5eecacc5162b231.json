{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx\";\nimport ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModalWindow = ev => {\n      this.props.isModalWindow ? this.props.toggleModalWindow(false) : this.props.toggleModalWindow(true);\n      const getId = ev.target;\n      return finalId = getId.getAttribute('id');\n    };\n\n    this.insertAfter = (elem, refElem) => {\n      return this.myRef.current.insertBefore(elem, refElem.nextSibling);\n    };\n\n    this.sortToLow = () => {\n      for (let i = 0; i < this.myRef.current.children.length; i++) {\n        for (let n = i; n < this.myRef.current.children.length; n++) {\n          if (+this.myRef.current.children[i].getAttribute('data-price') > +this.myRef.current.children[n].getAttribute('data-price')) {\n            let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n            this.insertAfter(replaceNode, this.myRef.current.children[i]);\n          }\n        }\n      }\n    };\n\n    this.sortToHigh = () => {\n      for (let i = 0; i < this.myRef.current.children.length; i++) {\n        for (let n = i; n < this.myRef.current.children.length; n++) {\n          if (+this.myRef.current.children[i].getAttribute('data-price') < +this.myRef.current.children[n].getAttribute('data-price')) {\n            let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n            this.insertAfter(replaceNode, this.myRef.current.children[i]);\n          }\n        }\n      }\n    };\n\n    this.sortByName = () => {\n      for (let i = 0; i < this.myRef.current.children.length; i++) {\n        for (let n = i; n < this.myRef.current.children.length; n++) {\n          if (this.myRef.current.children[i].getAttribute('data-name') > this.myRef.current.children[n].getAttribute('data-name')) {\n            let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n            this.insertAfter(replaceNode, this.myRef.current.children[i]);\n          }\n        }\n      }\n    };\n\n    this.myRef = /*#__PURE__*/createRef();\n  }\n\n  componentDidMount() {\n    this.props.setNftDataThunk();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.nft !== this.props.nft) this.props.setNftDataThunk();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    console.log(nextProps.nft.length, this.props.nft.length);\n\n    if (nextProps.nft.length !== this.props.nft.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductList, {\n      sortByName: this.sortByName,\n      sortToLow: this.sortToLow,\n      sortToHigh: this.sortToHigh,\n      myRef: this.myRef,\n      nft: this.props.nft,\n      isFetching: this.props.isFetching,\n      openModalWindow: this.openModalWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    nft: state.productPage.nft,\n    isFetching: state.productPage.isFetching,\n    isModalWindow: state.productPage.isModalWindow\n  };\n};\n\nexport let finalId;\nexport default connect(mapStateToProps, {\n  setNftDataThunk,\n  toggleModalWindow\n})(ProductListContainer);","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx"],"names":["ProductList","connect","setNftDataThunk","toggleModalWindow","React","createRef","ProductListContainer","Component","constructor","props","openModalWindow","ev","isModalWindow","getId","target","finalId","getAttribute","insertAfter","elem","refElem","myRef","current","insertBefore","nextSibling","sortToLow","i","children","length","n","replaceNode","replaceChild","sortToHigh","sortByName","componentDidMount","componentDidUpdate","prevProps","nft","shouldComponentUpdate","nextProps","console","log","render","isFetching","mapStateToProps","state","productPage"],"mappings":"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","sourcesContent":["import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { createRef } from \"react\";\n\nclass ProductListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = createRef();\n    }\n\n    componentDidMount() {\n        this.props.setNftDataThunk();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.nft !== this.props.nft) \n        this.props.setNftDataThunk();\n    }\n    \n\n    shouldComponentUpdate(nextProps) {\n        console.log(nextProps.nft.length, this.props.nft.length)\n        if (nextProps.nft.length !== this.props.nft.length) {\n            return true\n        } else {\n            return false;\n        }\n    }\n    \n\n    openModalWindow = (ev) => {\n        this.props.isModalWindow ? this.props.toggleModalWindow(false) : this.props.toggleModalWindow(true);\n        const getId = ev.target;\n        return finalId = getId.getAttribute('id');\n    }\n\n\n    insertAfter = (elem, refElem) => {\n        return this.myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    sortToLow = () => {\n        for (let i = 0; i < this.myRef.current.children.length; i++) {\n            for (let n = i; n < this.myRef.current.children.length; n++) {\n                if (+this.myRef.current.children[i].getAttribute('data-price') > +this.myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n                    this.insertAfter(replaceNode, this.myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    sortToHigh = () => {\n        for (let i = 0; i < this.myRef.current.children.length; i++) {\n            for (let n = i; n < this.myRef.current.children.length; n++) {\n                if (+this.myRef.current.children[i].getAttribute('data-price') < +this.myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n                    this.insertAfter(replaceNode, this.myRef.current.children[i]);\n                }\n            }\n        }\n    } \n\n    sortByName = () => {\n        for (let i = 0; i < this.myRef.current.children.length; i++) {\n            for (let n = i; n < this.myRef.current.children.length; n++) {\n                if (this.myRef.current.children[i].getAttribute('data-name') > this.myRef.current.children[n].getAttribute('data-name')) {\n                    let replaceNode = this.myRef.current.replaceChild(this.myRef.current.children[n], this.myRef.current.children[i]);\n                    this.insertAfter(replaceNode, this.myRef.current.children[i]);\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <ProductList sortByName={this.sortByName} \n                sortToLow={this.sortToLow} \n                sortToHigh={this.sortToHigh} myRef={this.myRef} \n                nft={this.props.nft} \n                isFetching={this.props.isFetching}\n                openModalWindow={this.openModalWindow}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n        isFetching: state.productPage.isFetching,\n        isModalWindow: state.productPage.isModalWindow\n    }\n}\n\nexport let finalId;\n\nexport default connect(mapStateToProps, { setNftDataThunk, toggleModalWindow })(ProductListContainer);"]},"metadata":{},"sourceType":"module"}