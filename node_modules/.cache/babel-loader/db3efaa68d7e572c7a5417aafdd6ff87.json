{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductListContainer = props => {\n  _s();\n\n  const myRef = useRef(); // const [modalWindow, setModalWindow] = useState(false);\n\n  useEffect(() => {\n    props.setNftDataThunk();\n  }, [true]);\n\n  const openModalWindow = () => {\n    console.log(modalWindow);\n    props.isModalWindow ? setModalWindow(false) : setModalWindow(true);\n  };\n\n  const insertAfter = (elem, refElem) => {\n    return myRef.current.insertBefore(elem, refElem.nextSibling);\n  };\n\n  const sortToLow = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortToHigh = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortByName = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (myRef.current.children[i].getAttribute('data-name') > myRef.current.children[n].getAttribute('data-name')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    sortByName: sortByName,\n    sortToLow: sortToLow,\n    sortToHigh: sortToHigh,\n    myRef: myRef,\n    nft: props.nft,\n    isFetching: props.isFetching,\n    openModalWindow: openModalWindow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductListContainer, \"q2ppNrvms5kW2WRaEHDe9gJ2smw=\");\n\n_c = ProductListContainer;\n\nconst mapStateToProps = state => {\n  return {\n    nft: state.productPage.nft,\n    isFetching: state.productPage.isFetching,\n    isModalWindow: state.productPage.isModalWindow\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNftDataThunk,\n  toggleModalWindow\n})(ProductListContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx"],"names":["ProductList","connect","setNftDataThunk","toggleModalWindow","React","useEffect","useRef","useState","ProductListContainer","props","myRef","openModalWindow","console","log","modalWindow","isModalWindow","setModalWindow","insertAfter","elem","refElem","current","insertBefore","nextSibling","sortToLow","i","children","length","n","getAttribute","replaceNode","replaceChild","sortToHigh","sortByName","nft","isFetching","mapStateToProps","state","productPage"],"mappings":"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","sourcesContent":["import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst ProductListContainer = (props) => {\n\n    const myRef = useRef();\n\n    // const [modalWindow, setModalWindow] = useState(false);\n\n    useEffect(() => {\n        props.setNftDataThunk();\n    }, [true])\n\n    const openModalWindow = () => {\n        console.log(modalWindow)\n        props.isModalWindow ? setModalWindow(false) : setModalWindow(true);\n    }\n\n\n    const insertAfter = (elem, refElem) => {\n        return myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    const sortToLow = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    const sortToHigh = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    } \n\n    const sortByName = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (myRef.current.children[i].getAttribute('data-name') > myRef.current.children[n].getAttribute('data-name')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    return (\n        <ProductList sortByName={sortByName} \n            sortToLow={sortToLow} \n            sortToHigh={sortToHigh} myRef={myRef} \n            nft={props.nft} \n            isFetching={props.isFetching}\n            openModalWindow={openModalWindow}\n        />\n    )\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n        isFetching: state.productPage.isFetching,\n        isModalWindow: state.productPage.isModalWindow\n    }\n}\n\nexport default connect(mapStateToProps, { setNftDataThunk, toggleModalWindow })(ProductListContainer);"]},"metadata":{},"sourceType":"module"}