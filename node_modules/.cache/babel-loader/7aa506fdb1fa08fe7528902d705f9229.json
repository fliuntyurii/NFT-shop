{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx\";\nimport ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk } from '../../redux/productPageReducer.tsx';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductListContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.insertAfter = (elem, refElem) => {\n      return myRef.current.insertBefore(elem, refElem.nextSibling);\n    };\n\n    this.sortToLow = () => {\n      for (let i = 0; i < myRef.current.children.length; i++) {\n        for (let n = i; n < myRef.current.children.length; n++) {\n          if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n            let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n            insertAfter(replaceNode, myRef.current.children[i]);\n          }\n        }\n      }\n    };\n\n    this.sortToHigh = () => {\n      for (let i = 0; i < myRef.current.children.length; i++) {\n        for (let n = i; n < myRef.current.children.length; n++) {\n          if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n            let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n            insertAfter(replaceNode, myRef.current.children[i]);\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.setNftDataThunk();\n  }\n\n  render() {\n    const myRef = useRef(null);\n    return /*#__PURE__*/_jsxDEV(ProductList, {\n      nft: this.props.nft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    nft: state.productPage.nft,\n    productPage: state.productPage\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNftDataThunk\n})(ProductListContainer);","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx"],"names":["ProductList","connect","setNftDataThunk","React","ProductListContainer","Component","insertAfter","elem","refElem","myRef","current","insertBefore","nextSibling","sortToLow","i","children","length","n","getAttribute","replaceNode","replaceChild","sortToHigh","componentDidMount","props","render","useRef","nft","mapStateToProps","state","productPage"],"mappings":"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","sourcesContent":["import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk } from '../../redux/productPageReducer.tsx';\nimport React from \"react\";\n\nclass ProductListContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.setNftDataThunk()\n    }\n\n    insertAfter = (elem, refElem) => {\n        return myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    sortToLow = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    sortToHigh = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    } \n\n    render() {\n        const myRef = useRef(null);\n\n        return (\n            <ProductList nft={this.props.nft} />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n        productPage: state.productPage\n    }\n}\n\nexport default connect(mapStateToProps, { setNftDataThunk })(ProductListContainer);"]},"metadata":{},"sourceType":"module"}