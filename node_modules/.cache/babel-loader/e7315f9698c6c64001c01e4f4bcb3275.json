{"ast":null,"code":"const initialState = {\n  nft: []\n};\n\nconst productPageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type = 'SET-NFT-DATA', nft) {\n    return { ...state,\n      nft: action.nft\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const setNftData = nft => ({\n  type: 'SET-NFT-DATA',\n  nft\n});\nexport default productPageReducer;\nexport const setNftDataThunk = () => dispatch => {\n  fetch('http://localhost:8000/Products', {\n    method: 'GET'\n  }).then(response => response.json()).then(data => {\n    dispatch(setNftData(data));\n  });\n};","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/my-app/src/redux/productPageReducer.jsx"],"names":["initialState","nft","productPageReducer","state","action","type","setNftData","setNftDataThunk","dispatch","fetch","method","then","response","json","data"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE;AADY,CAArB;;AAIA,MAAMC,kBAAkB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACzD,MAAIA,MAAM,CAACC,IAAP,GAAc,cAAd,EAA8BJ,GAAlC,EAAuC;AACnC,WAAO,EACH,GAAGE,KADA;AAEHF,MAAAA,GAAG,EAAEG,MAAM,CAACH;AAFT,KAAP;AAIH,GALD,MAOK;AACD,WAAOE,KAAP;AACH;AACJ,CAXD;;AAaA,OAAO,MAAMG,UAAU,GAAIL,GAAD,KAAU;AAACI,EAAAA,IAAI,EAAE,cAAP;AAAuBJ,EAAAA;AAAvB,CAAV,CAAnB;AAEP,eAAeC,kBAAf;AAEA,OAAO,MAAMK,eAAe,GAAG,MAAOC,QAAD,IAAc;AAE/CC,EAAAA,KAAK,CAAC,gCAAD,EAAmC;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAnC,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,IAAAA,QAAQ,CAACF,UAAU,CAACQ,IAAD,CAAX,CAAR;AACH,GAJL;AAKH,CAPM","sourcesContent":["const initialState = {\n    nft: []\n}\n\nconst productPageReducer = (state = initialState, action) => {\n    if (action.type = 'SET-NFT-DATA', nft) {\n        return {\n            ...state,\n            nft: action.nft\n        }\n    } \n    \n    else {\n        return state;  \n    }\n}\n\nexport const setNftData = (nft) => ({type: 'SET-NFT-DATA', nft})\n\nexport default productPageReducer;\n\nexport const setNftDataThunk = () => (dispatch) => {\n\n    fetch('http://localhost:8000/Products', {method: 'GET'})\n        .then(response => response.json())\n        .then(data => {\n            dispatch(setNftData(data))\n        })\n}"]},"metadata":{},"sourceType":"module"}