{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductPage from \"./ProductPage\";\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { setNftData, setNftDataThunk } from \"../../redux/productPageReducer.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPageContainer = props => {\n  _s();\n\n  const [confirmDelete, setconfirmDelete] = useState(false);\n\n  const closeModalWindow = () => {\n    props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n  };\n\n  async function postData() {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  }\n\n  const deleteNft = ev => {\n    const id = ev.target.getAttribute('id');\n    console.log(id); // async function postData(url = '', data = {}) {\n    //     const response = await fetch(url, { \n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //     body: JSON.stringify(data)\n    // })\n    // return await response.json();\n\n    postData('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/', {\n      answer: 42\n    }).then(data => {\n      console.log(data);\n    }); // .then(response => response.json())\n    // .then(data => console.log(data))\n    // let searchItem = id;\n    // let itemPosition = props.nft.find(item => item.id === searchItem);\n    // console.log(itemPosition)\n    // let myIndex = props.nft.indexOf();\n    //     if (myIndex !== -1) {\n    //         props.nft.splice(myIndex, 1);\n    //     }\n\n    props.toggleModalWindow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isModalWindow ? /*#__PURE__*/_jsxDEV(ProductPage, {\n      deleteNft: deleteNft,\n      nft: props.nft,\n      closeModalWindow: closeModalWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductPageContainer, \"djuIepKxJSHP0inuX2pJVMlGuhg=\");\n\n_c = ProductPageContainer;\n\nconst mapStateToProps = state => {\n  return {\n    isModalWindow: state.productPage.isModalWindow,\n    nft: state.productPage.nft\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNftData,\n  toggleModalWindow,\n  setNftDataThunk\n})(ProductPageContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPageContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx"],"names":["ProductPage","connect","useState","toggleModalWindow","setNftData","setNftDataThunk","ProductPageContainer","props","confirmDelete","setconfirmDelete","closeModalWindow","isModalWindow","postData","url","data","response","fetch","method","headers","body","JSON","stringify","json","deleteNft","ev","id","target","getAttribute","console","log","answer","then","nft","mapStateToProps","state","productPage"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,oCAA5C;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMQ,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACJ,iBAAN,CAAwB,KAAxB,CAAtB,GAAuDI,KAAK,CAACJ,iBAAN,CAAwB,IAAxB,CAAvD;AACH,GAFD;;AAIA,iBAAeS,QAAf,GAA6C;AAAA,QAArBC,GAAqB,uEAAf,EAAe;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACzC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAClCI,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFyB;AAKlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAL4B,KAAN,CAA5B;AAOA,WAAO,MAAMC,QAAQ,CAACO,IAAT,EAAb;AACH;;AACD,QAAMC,SAAS,GAAIC,EAAD,IAAQ;AACtB,UAAMC,EAAE,GAAGD,EAAE,CAACE,MAAH,CAAUC,YAAV,CAAuB,IAAvB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ,EAFsB,CAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAb,IAAAA,QAAQ,CAAC,oEAAD,EAAuE;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAvE,CAAR,CACKC,IADL,CACWjB,IAAD,IAAU;AACZc,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACH,KAHL,EAbsB,CAkBtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAP,IAAAA,KAAK,CAACJ,iBAAN,CAAwB,KAAxB;AACH,GA9BD;;AAgCA,sBACI;AAAA,cACKI,KAAK,CAACI,aAAN,gBACG,QAAC,WAAD;AACI,MAAA,SAAS,EAAEY,SADf;AAEI,MAAA,GAAG,EAAEhB,KAAK,CAACyB,GAFf;AAGI,MAAA,gBAAgB,EAAEtB;AAHtB;AAAA;AAAA;AAAA;AAAA,YADH,GAMD;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7DD;;GAAMJ,oB;;KAAAA,oB;;AA+DN,MAAM2B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHvB,IAAAA,aAAa,EAAEuB,KAAK,CAACC,WAAN,CAAkBxB,aAD9B;AAEHqB,IAAAA,GAAG,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAe/B,OAAO,CAACgC,eAAD,EAAkB;AAAE7B,EAAAA,UAAF;AAAcD,EAAAA,iBAAd;AAAiCE,EAAAA;AAAjC,CAAlB,CAAP,CAA6EC,oBAA7E,CAAf","sourcesContent":["import ProductPage from \"./ProductPage\"\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { setNftData, setNftDataThunk } from \"../../redux/productPageReducer.tsx\";\n\nconst ProductPageContainer = (props) => {\n\n    const [confirmDelete, setconfirmDelete] = useState(false);\n\n    const closeModalWindow = () => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n    }\n\n    async function postData(url = '', data = {}) {\n        const response = await fetch(url, { \n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        body: JSON.stringify(data)\n        })\n        return await response.json();\n    }\n    const deleteNft = (ev) => {\n        const id = ev.target.getAttribute('id');\n        console.log(id)\n        // async function postData(url = '', data = {}) {\n        //     const response = await fetch(url, { \n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //       },\n        //     body: JSON.stringify(data)\n        // })\n        // return await response.json();\n\n        postData('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/', { answer: 42 })\n            .then((data) => {\n                console.log(data); \n            });\n        \n        // .then(response => response.json())\n        // .then(data => console.log(data))\n        // let searchItem = id;\n        // let itemPosition = props.nft.find(item => item.id === searchItem);\n        // console.log(itemPosition)\n\n        // let myIndex = props.nft.indexOf();\n        //     if (myIndex !== -1) {\n        //         props.nft.splice(myIndex, 1);\n        //     }\n        \n        props.toggleModalWindow(false);     \n    }\n    \n    return (\n        <div>\n            {props.isModalWindow ? \n                <ProductPage \n                    deleteNft={deleteNft}\n                    nft={props.nft} \n                    closeModalWindow={closeModalWindow} \n                /> : \n            null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isModalWindow: state.productPage.isModalWindow,\n        nft: state.productPage.nft\n    }\n}\n\nexport default connect(mapStateToProps, { setNftData, toggleModalWindow, setNftDataThunk })(ProductPageContainer);"]},"metadata":{},"sourceType":"module"}