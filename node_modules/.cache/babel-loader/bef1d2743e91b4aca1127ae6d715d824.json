{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductPage from \"./ProductPage\";\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPageContainer = props => {\n  _s();\n\n  const [confirmDelete, setconfirmDelete] = useState(false);\n\n  const closeModalWindow = () => {\n    props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n  };\n\n  const deleteNft = ev => {\n    const deleteById = ev.target;\n    const id = deleteById.getAttribute('id');\n    fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, {\n      method: 'DELETE'\n    }) // .then(res => console.log(res.text()))\n    // .then(res => console.log(res))\n    .then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      } // element.innerHTML = 'Delete successful';\n\n    });\n    props.toggleModalWindow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isModalWindow ? /*#__PURE__*/_jsxDEV(ProductPage, {\n      deleteNft: deleteNft,\n      nft: props.nft,\n      closeModalWindow: closeModalWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductPageContainer, \"djuIepKxJSHP0inuX2pJVMlGuhg=\");\n\n_c = ProductPageContainer;\n\nconst mapStateToProps = state => {\n  return {\n    isModalWindow: state.productPage.isModalWindow,\n    nft: state.productPage.nft\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleModalWindow\n})(ProductPageContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPageContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx"],"names":["ProductPage","connect","useState","toggleModalWindow","ProductPageContainer","props","confirmDelete","setconfirmDelete","closeModalWindow","isModalWindow","deleteNft","ev","deleteById","target","id","getAttribute","fetch","method","then","response","isJson","headers","get","includes","data","json","ok","error","message","status","Promise","reject","nft","mapStateToProps","state","productPage"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMM,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACF,iBAAN,CAAwB,KAAxB,CAAtB,GAAuDE,KAAK,CAACF,iBAAN,CAAwB,IAAxB,CAAvD;AACH,GAFD;;AAIA,QAAMO,SAAS,GAAIC,EAAD,IAAQ;AACtB,UAAMC,UAAU,GAAGD,EAAE,CAACE,MAAtB;AACA,UAAMC,EAAE,GAAGF,UAAU,CAACG,YAAX,CAAwB,IAAxB,CAAX;AAEAC,IAAAA,KAAK,CAAC,uEAAuEF,EAAxE,EAA4E;AAC7EG,MAAAA,MAAM,EAAE;AADqE,KAA5E,CAAL,CAEI;AACA;AAHJ,KAIKC,IAJL,CAIU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,YAAMC,MAAM,4BAAGD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,0DAAG,sBAAsCC,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGJ,MAAM,KAAI,MAAMD,QAAQ,CAACM,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AACd;AACA,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BT,QAAQ,CAACU,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,OATmB,CAWpB;;AACH,KAhBL;AAiBAtB,IAAAA,KAAK,CAACF,iBAAN,CAAwB,KAAxB;AAEH,GAvBD;;AAyBA,sBACI;AAAA,cACKE,KAAK,CAACI,aAAN,gBACG,QAAC,WAAD;AACI,MAAA,SAAS,EAAEC,SADf;AAEI,MAAA,GAAG,EAAEL,KAAK,CAAC2B,GAFf;AAGI,MAAA,gBAAgB,EAAExB;AAHtB;AAAA;AAAA;AAAA;AAAA,YADH,GAMD;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5CD;;GAAMJ,oB;;KAAAA,oB;;AA8CN,MAAM6B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHzB,IAAAA,aAAa,EAAEyB,KAAK,CAACC,WAAN,CAAkB1B,aAD9B;AAEHuB,IAAAA,GAAG,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAe/B,OAAO,CAACgC,eAAD,EAAkB;AAAE9B,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,oBAAhD,CAAf","sourcesContent":["import ProductPage from \"./ProductPage\"\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\n\nconst ProductPageContainer = (props) => {\n\n    const [confirmDelete, setconfirmDelete] = useState(false);\n\n    const closeModalWindow = () => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n    }\n    \n    const deleteNft = (ev) => {\n        const deleteById = ev.target;\n        const id = deleteById.getAttribute('id');\n        \n        fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, {\n            method: 'DELETE'})\n            // .then(res => console.log(res.text()))\n            // .then(res => console.log(res))\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n        \n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n        \n                // element.innerHTML = 'Delete successful';\n            })\n        props.toggleModalWindow(false);\n        \n    }\n    \n    return (\n        <div>\n            {props.isModalWindow ? \n                <ProductPage \n                    deleteNft={deleteNft}\n                    nft={props.nft} \n                    closeModalWindow={closeModalWindow} \n                /> : \n            null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isModalWindow: state.productPage.isModalWindow,\n        nft: state.productPage.nft\n    }\n}\n\nexport default connect(mapStateToProps, { toggleModalWindow })(ProductPageContainer);"]},"metadata":{},"sourceType":"module"}