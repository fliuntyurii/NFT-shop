{"ast":null,"code":"import _objectSpread from\"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export var baseUrl='http://localhost:8000/Products/';var initialState={nft:[],isFetching:false,isModalWindow:false};var productPageReducer=function productPageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(action.type==='SET-NFT-DATA'){return _objectSpread(_objectSpread({},state),{},{nft:action.nft});}if(action.type==='FETCHING-SWITCHER'){return _objectSpread(_objectSpread({},state),{},{isFetching:action.isFetching});}if(action.type==='MODAL-WINDOW'){return _objectSpread(_objectSpread({},state),{},{isModalWindow:action.isModalWindow});}return state;};export var setNftData=function setNftData(nft){return{type:'SET-NFT-DATA',nft:nft};};export var isFetchingCreactor=function isFetchingCreactor(isFetching){return{type:'FETCHING-SWITCHER',isFetching:isFetching};};export var toggleModalWindow=function toggleModalWindow(isModalWindow){return{type:\"MODAL-WINDOW\",isModalWindow:isModalWindow};};export default productPageReducer;export var setNftDataThunk=function setNftDataThunk(){return function(dispatch){dispatch(isFetchingCreactor(true));fetch(baseUrl,{method:'GET'}).then(function(response){return response.json();}).then(function(data){dispatch(setNftData(data));dispatch(isFetchingCreactor(false));});};};","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/redux/productPageReducer.tsx"],"names":["baseUrl","initialState","nft","isFetching","isModalWindow","productPageReducer","state","action","type","setNftData","isFetchingCreactor","toggleModalWindow","setNftDataThunk","dispatch","fetch","method","then","response","json","data"],"mappings":"yKAAA,MAAO,IAAMA,CAAAA,OAAO,CAAG,iCAAhB,CAkBP,GAAMC,CAAAA,YAA0B,CAAG,CAC/BC,GAAG,CAAE,EAD0B,CAE/BC,UAAU,CAAE,KAFmB,CAG/BC,aAAa,CAAE,KAHgB,CAAnC,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CACzD,GAAIA,MAAM,CAACC,IAAP,GAAgB,cAApB,CAAoC,CAChC,sCACOF,KADP,MAEIJ,GAAG,CAAEK,MAAM,CAACL,GAFhB,GAIH,CAED,GAAIK,MAAM,CAACC,IAAP,GAAgB,mBAApB,CAAyC,CACrC,sCACOF,KADP,MAEIH,UAAU,CAAEI,MAAM,CAACJ,UAFvB,GAIH,CAED,GAAII,MAAM,CAACC,IAAP,GAAgB,cAApB,CAAoC,CAChC,sCACOF,KADP,MAEIF,aAAa,CAAEG,MAAM,CAACH,aAF1B,GAIH,CAED,MAAOE,CAAAA,KAAP,CACH,CAvBD,CAyBA,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACP,GAAD,QAAU,CAACM,IAAI,CAAE,cAAP,CAAuBN,GAAG,CAAHA,GAAvB,CAAV,EAAnB,CAEP,MAAO,IAAMQ,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACP,UAAD,QAAiB,CAACK,IAAI,CAAE,mBAAP,CAA4BL,UAAU,CAAVA,UAA5B,CAAjB,EAA3B,CAEP,MAAO,IAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACP,aAAD,QAAoB,CAACI,IAAI,CAAE,cAAP,CAAuBJ,aAAa,CAAbA,aAAvB,CAApB,EAA1B,CAEP,cAAeC,CAAAA,kBAAf,CAEA,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAM,UAACC,QAAD,CAAc,CAC/CA,QAAQ,CAACH,kBAAkB,CAAC,IAAD,CAAnB,CAAR,CAEAI,KAAK,CAACd,OAAD,CAAU,CAACe,MAAM,CAAE,KAAT,CAAV,CAAL,CACKC,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,IAAI,CAAI,CACVN,QAAQ,CAACJ,UAAU,CAACU,IAAD,CAAX,CAAR,CACAN,QAAQ,CAACH,kBAAkB,CAAC,KAAD,CAAnB,CAAR,CACH,CALL,EAMH,CAT8B,EAAxB","sourcesContent":["export const baseUrl = 'http://localhost:8000/Products/'\n\ntype stateCreator = {\n    nft: nftCreator | []\n    isFetching: boolean\n    isModalWindow: boolean\n};\n\nexport type nftCreator = {\n    id: number\n    imageUrl: string\n    name: string\n    amount: number\n    size: {}\n    price: number\n    comments: []\n}\n\nconst initialState: stateCreator = {\n    nft: [],\n    isFetching: false,\n    isModalWindow: false\n}\n\nconst productPageReducer = (state = initialState, action) => {\n    if (action.type === 'SET-NFT-DATA') {\n        return {\n            ...state,\n            nft: action.nft\n        }\n    }\n\n    if (action.type === 'FETCHING-SWITCHER') {\n        return {\n            ...state,\n            isFetching: action.isFetching\n        }\n    }\n\n    if (action.type === 'MODAL-WINDOW') {\n        return {\n            ...state,\n            isModalWindow: action.isModalWindow\n        }\n    }\n\n    return state;\n}\n\nexport const setNftData = (nft) => ({type: 'SET-NFT-DATA', nft})\n\nexport const isFetchingCreactor = (isFetching) => ({type: 'FETCHING-SWITCHER', isFetching});\n\nexport const toggleModalWindow = (isModalWindow) => ({type: \"MODAL-WINDOW\", isModalWindow})\n\nexport default productPageReducer;\n\nexport const setNftDataThunk = () => (dispatch) => {\n    dispatch(isFetchingCreactor(true));\n\n    fetch(baseUrl, {method: 'GET'})\n        .then(response => response.json())\n        .then(data => {\n            dispatch(setNftData(data))\n            dispatch(isFetchingCreactor(false))\n        })\n} "]},"metadata":{},"sourceType":"module"}