{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductPage from \"./ProductPage\";\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { setNftData } from \"../../redux/productPageReducer.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPageContainer = props => {\n  _s();\n\n  setInterval(() => {\n    console.log(props.nft);\n  }, 2000);\n  const [confirmDelete, setconfirmDelete] = useState(false);\n\n  const closeModalWindow = () => {\n    props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n  };\n\n  const deleteNft = ev => {\n    const id = +ev.target.getAttribute('id');\n    console.log(id);\n    fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, {\n      method: 'DELETE'\n    }).then(res => res.json()).then(data => data);\n    props.toggleModalWindow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isModalWindow ? /*#__PURE__*/_jsxDEV(ProductPage, {\n      deleteNft: deleteNft,\n      nft: props.nft,\n      closeModalWindow: closeModalWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductPageContainer, \"djuIepKxJSHP0inuX2pJVMlGuhg=\");\n\n_c = ProductPageContainer;\n\nconst mapStateToProps = state => {\n  return {\n    isModalWindow: state.productPage.isModalWindow,\n    nft: state.productPage.nft\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNftData,\n  toggleModalWindow\n})(ProductPageContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPageContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductPage/ProductPageContainer.jsx"],"names":["ProductPage","connect","useState","toggleModalWindow","setNftData","ProductPageContainer","props","setInterval","console","log","nft","confirmDelete","setconfirmDelete","closeModalWindow","isModalWindow","deleteNft","ev","id","target","getAttribute","fetch","method","then","res","json","data","mapStateToProps","state","productPage"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,UAAT,QAA2B,oCAA3B;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACpCC,EAAAA,WAAW,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAlB;AACH,GAFU,EAER,IAFQ,CAAX;AAGA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMW,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,KAAK,CAACQ,aAAN,GAAsBR,KAAK,CAACH,iBAAN,CAAwB,KAAxB,CAAtB,GAAuDG,KAAK,CAACH,iBAAN,CAAwB,IAAxB,CAAvD;AACH,GAFD;;AAIA,QAAMY,SAAS,GAAIC,EAAD,IAAQ;AACtB,UAAMC,EAAE,GAAG,CAACD,EAAE,CAACE,MAAH,CAAUC,YAAV,CAAuB,IAAvB,CAAZ;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACAG,IAAAA,KAAK,CAAC,uEAAuEH,EAAxE,EAA4E;AAC7EI,MAAAA,MAAM,EAAE;AADqE,KAA5E,CAAL,CAGKC,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAIUG,IAAI,IAAIA,IAJlB;AAMAnB,IAAAA,KAAK,CAACH,iBAAN,CAAwB,KAAxB;AAEH,GAXD;;AAaA,sBACI;AAAA,cACKG,KAAK,CAACQ,aAAN,gBACG,QAAC,WAAD;AACI,MAAA,SAAS,EAAEC,SADf;AAEI,MAAA,GAAG,EAAET,KAAK,CAACI,GAFf;AAGI,MAAA,gBAAgB,EAAEG;AAHtB;AAAA;AAAA;AAAA;AAAA,YADH,GAMD;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCD;;GAAMR,oB;;KAAAA,oB;;AAoCN,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,aAAa,EAAEa,KAAK,CAACC,WAAN,CAAkBd,aAD9B;AAEHJ,IAAAA,GAAG,EAAEiB,KAAK,CAACC,WAAN,CAAkBlB;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeT,OAAO,CAACyB,eAAD,EAAkB;AAAEtB,EAAAA,UAAF;AAAcD,EAAAA;AAAd,CAAlB,CAAP,CAA4DE,oBAA5D,CAAf","sourcesContent":["import ProductPage from \"./ProductPage\"\nimport { connect } from 'react-redux';\nimport { useState } from \"react\";\nimport { toggleModalWindow } from \"../../redux/productPageReducer.tsx\";\nimport { setNftData } from \"../../redux/productPageReducer.tsx\";\n\nconst ProductPageContainer = (props) => {\n    setInterval(() => {\n        console.log(props.nft)\n    }, 2000);\n    const [confirmDelete, setconfirmDelete] = useState(false);\n\n    const closeModalWindow = () => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n    }\n    \n    const deleteNft = (ev) => {\n        const id = +ev.target.getAttribute('id');\n        console.log(id)\n        fetch('https://my-json-server.typicode.com/fliuntyurii/NFT-shop/Products/' + id, { \n            method: 'DELETE'\n        })\n            .then(res => res.json())\n            .then(data => data);\n        \n        props.toggleModalWindow(false);\n        \n    }\n    \n    return (\n        <div>\n            {props.isModalWindow ? \n                <ProductPage \n                    deleteNft={deleteNft}\n                    nft={props.nft} \n                    closeModalWindow={closeModalWindow} \n                /> : \n            null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isModalWindow: state.productPage.isModalWindow,\n        nft: state.productPage.nft\n    }\n}\n\nexport default connect(mapStateToProps, { setNftData, toggleModalWindow })(ProductPageContainer);"]},"metadata":{},"sourceType":"module"}