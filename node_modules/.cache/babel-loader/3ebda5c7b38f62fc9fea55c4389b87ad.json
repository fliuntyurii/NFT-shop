{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/my-app/src/components/ProductList/ProductListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { isFetchingCreactor, setNftData } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductListContainer = () => {\n  _s();\n\n  useEffect(() => {\n    props.isFetchingCreactor(true);\n    fetch('http://localhost:8000/Products', {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      props.setNftData(data);\n      props.isFetchingCreactor(true);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    nft: props.nft\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductListContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProductListContainer;\nconst mapDispatchToProps = {\n  isFetchingCreactor,\n  setNftData\n};\n\nconst mapStateToProps = state => {\n  return {\n    nft: state.productPage.nft\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/my-app/src/components/ProductList/ProductListContainer.jsx"],"names":["ProductList","connect","isFetchingCreactor","setNftData","React","useEffect","ProductListContainer","props","fetch","method","then","response","json","data","nft","mapDispatchToProps","mapStateToProps","state","productPage"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,oCAA/C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAE/BD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACL,kBAAN,CAAyB,IAAzB;AACAM,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAnC,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,MAAAA,KAAK,CAACJ,UAAN,CAAiBU,IAAjB;AACAN,MAAAA,KAAK,CAACL,kBAAN,CAAyB,IAAzB;AACH,KALL;AAMH,GARQ,CAAT;AAUA,sBACI,QAAC,WAAD;AAAa,IAAA,GAAG,EAAEK,KAAK,CAACO;AAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAfD;;GAAMR,oB;;KAAAA,oB;AAiBN,MAAMS,kBAAkB,GAAG;AACvBb,EAAAA,kBADuB;AACHC,EAAAA;AADG,CAA3B;;AAIA,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,GAAG,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACe,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CT,oBAA7C,CAAf","sourcesContent":["import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { isFetchingCreactor, setNftData } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect } from \"react\";\n\nconst ProductListContainer = () => {\n\n    useEffect(() => {\n        props.isFetchingCreactor(true);\n        fetch('http://localhost:8000/Products', {method: 'GET'})\n            .then(response => response.json())\n            .then(data => {\n                props.setNftData(data)\n                props.isFetchingCreactor(true)\n            })\n    })\n\n    return (\n        <ProductList nft={props.nft} />\n    )\n}\n\nconst mapDispatchToProps = {\n    isFetchingCreactor, setNftData\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListContainer);"]},"metadata":{},"sourceType":"module"}