{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductList/ProductList.jsx\",\n    _s = $RefreshSig$();\n\n// import NftList from \"./NftList\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport style from \"./ProductList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductList = props => {\n  _s();\n\n  // const addImage = 'https://clipart-best.com/img/plus/plus-clip-art-115.png';\n  const myRef = useRef(null);\n\n  const insertAfter = (elem, refElem) => {\n    return myRef.current.insertBefore(elem, refElem.nextSibling);\n  };\n\n  const sortToLow = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortToHigh = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortByName = () => {\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.block,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      name: \"products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.nav,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sortToLow,\n            children: \"Low $\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sortToHigh,\n            children: \"High $\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sortByName,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.nftPage,\n      ref: myRef,\n      children: props.nft.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-price\": nft.price,\n        className: style.nftBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: nft.imageUrl,\n          className: style.nftImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nft.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", nft.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", nft.price, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.button,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, nft.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductList, \"wYF4W973D0682KeLHvb0qnH30CA=\");\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductList.jsx"],"names":["React","useRef","style","ProductList","props","myRef","insertAfter","elem","refElem","current","insertBefore","nextSibling","sortToLow","i","children","length","n","getAttribute","replaceNode","replaceChild","sortToHigh","sortByName","block","nav","nftPage","nft","map","price","nftBlock","imageUrl","nftImage","name","amount","button","id"],"mappings":"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","sourcesContent":["// import NftList from \"./NftList\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport style from \"./ProductList.module.css\"\n\nconst ProductList = (props) => {\n    // const addImage = 'https://clipart-best.com/img/plus/plus-clip-art-115.png';\n    const myRef = useRef(null);\n\n    const insertAfter = (elem, refElem) => {\n        return myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    const sortToLow = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    const sortToHigh = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }   \n    \n    const sortByName = () => {\n        return\n    } \n\n    return (\n        <div className={style.block}>\n            <a name='products'></a>            \n            <div className={style.nav}>   \n                <h2>Products</h2>\n                <div>\n                    <div>Sort by: \n                        <button onClick={sortToLow}>Low $</button> | \n                        <button onClick={sortToHigh}>High $</button> | \n                        <button onClick={sortByName}>Name</button>\n                    </div>\n                </div>\n            </div>\n            \n            <div className={style.nftPage} ref={myRef}>                \n                {\n                    props.nft.map(nft => \n                    <div key={nft.id} data-price={nft.price} className={style.nftBlock}>\n                        <img src={nft.imageUrl} className={style.nftImage} />\n                        <h3>{nft.name}</h3>\n                        <p>Amount: {nft.amount}</p>\n                        <p>Price: {nft.price}$</p>\n                        <div className={style.button}>\n                            <button>Info</button>\n                            <button>Buy</button>\n                        </div>\n                    </div> )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}