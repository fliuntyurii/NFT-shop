{"ast":null,"code":"var _jsxFileName = \"/home/yuriifliunt/\\u0417\\u0430\\u0433\\u0430\\u043B\\u044C\\u043D\\u0435/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductListContainer = props => {\n  _s();\n\n  const myRef = useRef();\n  let currentCard;\n  console.log(currentCard.id);\n  useEffect(() => {\n    props.setNftDataThunk();\n  }, []);\n\n  const openModalWindow = ev => {\n    props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n    const getId = ev.target;\n    const id = getId.getAttribute('id');\n    return currentCard = props.nft.find(card => card.id == id); // console.log(currentCard.id)\n  };\n\n  const insertAfter = (elem, refElem) => {\n    return myRef.current.insertBefore(elem, refElem.nextSibling);\n  };\n\n  const sortToLow = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortToHigh = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  const sortByName = () => {\n    for (let i = 0; i < myRef.current.children.length; i++) {\n      for (let n = i; n < myRef.current.children.length; n++) {\n        if (myRef.current.children[i].getAttribute('data-name') > myRef.current.children[n].getAttribute('data-name')) {\n          let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n          insertAfter(replaceNode, myRef.current.children[i]);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    sortByName: sortByName,\n    sortToLow: sortToLow,\n    sortToHigh: sortToHigh,\n    myRef: myRef,\n    nft: props.nft,\n    isFetching: props.isFetching,\n    openModalWindow: openModalWindow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductListContainer, \"q2ppNrvms5kW2WRaEHDe9gJ2smw=\");\n\n_c = ProductListContainer;\n\nconst mapStateToProps = state => {\n  return {\n    nft: state.productPage.nft,\n    isFetching: state.productPage.isFetching,\n    isModalWindow: state.productPage.isModalWindow\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNftDataThunk,\n  toggleModalWindow\n})(ProductListContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListContainer\");","map":{"version":3,"sources":["/home/yuriifliunt/Загальне/projects/NFT-shop/src/components/ProductList/ProductListContainer.jsx"],"names":["ProductList","connect","setNftDataThunk","toggleModalWindow","React","useEffect","useRef","ProductListContainer","props","myRef","currentCard","console","log","id","openModalWindow","ev","isModalWindow","getId","target","getAttribute","nft","find","card","insertAfter","elem","refElem","current","insertBefore","nextSibling","sortToLow","i","children","length","n","replaceNode","replaceChild","sortToHigh","sortByName","isFetching","mapStateToProps","state","productPage"],"mappings":"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","sourcesContent":["import ProductList from \"./ProductList\";\nimport { connect } from 'react-redux';\nimport { setNftDataThunk, toggleModalWindow } from '../../redux/productPageReducer.tsx';\nimport React, { useEffect, useRef } from \"react\";\n\nconst ProductListContainer = (props) => {\n\n    const myRef = useRef();\n\n    let currentCard;\n    console.log(currentCard.id)\n\n    useEffect(() => {\n        props.setNftDataThunk();\n    }, [])\n\n    const openModalWindow = (ev) => {\n        props.isModalWindow ? props.toggleModalWindow(false) : props.toggleModalWindow(true);\n        const getId = ev.target;\n        const id = getId.getAttribute('id');\n        return currentCard = props.nft.find(card => card.id == id);\n        // console.log(currentCard.id)\n    }\n\n\n    const insertAfter = (elem, refElem) => {\n        return myRef.current.insertBefore(elem, refElem.nextSibling)\n    }\n\n    const sortToLow = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') > +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    const sortToHigh = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (+myRef.current.children[i].getAttribute('data-price') < +myRef.current.children[n].getAttribute('data-price')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    } \n\n    const sortByName = () => {\n        for (let i = 0; i < myRef.current.children.length; i++) {\n            for (let n = i; n < myRef.current.children.length; n++) {\n                if (myRef.current.children[i].getAttribute('data-name') > myRef.current.children[n].getAttribute('data-name')) {\n                    let replaceNode = myRef.current.replaceChild(myRef.current.children[n], myRef.current.children[i]);\n                    insertAfter(replaceNode, myRef.current.children[i]);\n                }\n            }\n        }\n    }\n\n    return (\n        <ProductList sortByName={sortByName} \n            sortToLow={sortToLow} \n            sortToHigh={sortToHigh} myRef={myRef} \n            nft={props.nft} \n            isFetching={props.isFetching}\n            openModalWindow={openModalWindow}\n        />\n    )\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nft: state.productPage.nft,\n        isFetching: state.productPage.isFetching,\n        isModalWindow: state.productPage.isModalWindow\n    }\n}\n\nexport default connect(mapStateToProps, { setNftDataThunk, toggleModalWindow })(ProductListContainer);"]},"metadata":{},"sourceType":"module"}